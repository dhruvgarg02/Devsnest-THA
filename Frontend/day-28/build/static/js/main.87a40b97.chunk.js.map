{"version":3,"sources":["component/CurrencySelector.js","component/Card.js","App.js","index.js"],"names":["CurrencySelector","getApiData","useState","fromCurrency","setFromCurrency","toCurrency","setToCurrency","onSubmit","e","preventDefault","id","className","onChange","target","value","type","Card","data","console","log","App","setData","fetch","process","then","response","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA6DeA,EA1DU,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAEvB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAMA,OAAO,uBAAMC,SALO,SAACC,GACjBA,EAAEC,iBACFR,EAAWE,EAAcE,IAGtB,UACH,yBAAQK,GAAG,gBAAgBC,UAAU,mBAAmBC,SAAU,SAAAJ,GAC9DJ,EAAgBI,EAAEK,OAAOC,QAD7B,UAII,wBAAQA,MAAM,GAAd,yBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,OAAd,uBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,sBACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,0BACA,wBAAQA,MAAM,MAAd,kBACA,wBAAQA,MAAM,MAAd,0BACA,wBAAQA,MAAM,MAAd,oCACA,wBAAQA,MAAM,MAAd,+BACA,wBAAQA,MAAM,MAAd,6BACA,wBAAQA,MAAM,MAAd,yBACA,wBAAQA,MAAM,MAAd,6BACA,wBAAQA,MAAM,MAAd,mCAGJ,yBAAQJ,GAAG,cAAcC,UAAU,mBAAmBC,SAAU,SAAAJ,GAC5DF,EAAcE,EAAEK,OAAOC,QAD3B,UAGI,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,0BACA,wBAAQA,MAAM,MAAd,kBACA,wBAAQA,MAAM,MAAd,0BACA,wBAAQA,MAAM,MAAd,oCACA,wBAAQA,MAAM,MAAd,+BACA,wBAAQA,MAAM,MAAd,6BACA,wBAAQA,MAAM,MAAd,yBACA,wBAAQA,MAAM,MAAd,6BACA,wBAAQA,MAAM,MAAd,mCAIJ,uBAAOC,KAAK,SAASD,MAAM,eC1CpBE,G,MAbF,SAACC,GAEV,OADAC,QAAQC,IAAIF,GAERA,EAAI,KAAS,mCACT,sBAAKN,UAAU,OAAf,UACI,wCAAWM,EAAI,KAAS,mCAAmC,4BAC3D,sCAASA,EAAI,KAAS,mCAAmC,0BACzD,iDAAoBA,EAAI,KAAS,mCAAmC,uBACpE,gDAAmBA,EAAI,KAAS,mCAAmC,qBAAnE,eACMA,EAAI,KAAS,iBAAoB,kDAA6BA,EAAI,KAAJ,KAAwB,mDAA6B,qDCa1HG,MAnBf,WACI,MAAwBlB,mBAAS,IAAjC,mBAAOe,EAAP,KAAaI,EAAb,KAUA,OACI,sBAAKV,UAAU,MAAf,UACI,cAAC,EAAD,CAAkBV,WAVP,SAACE,EAAcE,GAC9BiB,MAAM,mFAAD,OACkFnB,EADlF,wBAC8GE,EAD9G,mBAFOkB,qBAIVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAAAP,GACFI,EAAQJ,SAMZ,cAAC,EAAD,CAAMA,KAAMA,QCdxBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87a40b97.chunk.js","sourcesContent":["import \"../style/currencySelector.css\"\nimport {useState} from \"react\";\n\nconst CurrencySelector = ({getApiData}) => {\n\n    const [fromCurrency, setFromCurrency] = useState(\"\")\n    const [toCurrency, setToCurrency] = useState(\"\")\n    const HandleInput = (e) => {\n        e.preventDefault()\n        getApiData(fromCurrency, toCurrency)\n    }\n\n    return <form onSubmit={HandleInput}>\n        <select id=\"from-currency\" className=\"dropdown-content\" onChange={e => {\n            setFromCurrency(e.target.value)\n        }}\n        >\n            <option value=\"\">Select From</option>\n            <option value=\"BTC\">Bitcoin</option>\n            <option value=\"DICE\">Etheroll</option>\n            <option value=\"XRP\">Ripple</option>\n            <option value=\"ADA\">Cardano</option>\n            <option value=\"XLM\">Stellar</option>\n            <option value=\"LINK\">Chainlink</option>\n            <option value=\"UNI\">Uniswap</option>\n            <option value=\"DOT\">Polkadot</option>\n            <option value=\"DOGE\">DogeCoin</option>\n            <option value=\"DOPE\">DopeCoin</option>\n            <option value=\"USD\">US Dollar</option>\n            <option value=\"INR\">Indian Rupee</option>\n            <option value=\"EUR\">Euro</option>\n            <option value=\"JPY\">Japanese Yen</option>\n            <option value=\"GBP\">British Pound Sterling</option>\n            <option value=\"AUD\">Australian Dollar</option>\n            <option value=\"CAD\">Canadian Dollar</option>\n            <option value=\"CHF\">Swiss Franc</option>\n            <option value=\"CAD\">Canadian Dollar</option>\n            <option value=\"NZD\">New Zealand Dollar</option>\n        </select>\n\n        <select id=\"to-currency\" className=\"dropdown-content\" onChange={e => {\n            setToCurrency(e.target.value)\n        }}>\n            <option value=\"\">Select To</option>\n            <option value=\"USD\">US Dollar</option>\n            <option value=\"INR\">Indian Rupee</option>\n            <option value=\"EUR\">Euro</option>\n            <option value=\"JPY\">Japanese Yen</option>\n            <option value=\"GBP\">British Pound Sterling</option>\n            <option value=\"AUD\">Australian Dollar</option>\n            <option value=\"CAD\">Canadian Dollar</option>\n            <option value=\"CHF\">Swiss Franc</option>\n            <option value=\"CAD\">Canadian Dollar</option>\n            <option value=\"NZD\">New Zealand Dollar</option>\n\n        </select>\n\n        <input type=\"submit\" value=\"Submit\"/>\n    </form>\n}\n\nexport default CurrencySelector","import '../style/card.css';\n\nconst Card = (data) => {\n    console.log(data)\n    return (\n        data[\"data\"][\"Realtime Currency Exchange Rate\"] ?\n            <div className=\"card\">\n                <h3>From: {data[\"data\"][\"Realtime Currency Exchange Rate\"][\"2. From_Currency Name\"]}</h3>\n                <h3>To: {data[\"data\"][\"Realtime Currency Exchange Rate\"][\"4. To_Currency Name\"]}</h3>\n                <h3>Exchange Rate: {data[\"data\"][\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]}</h3>\n                <h3>Last Updated: {data[\"data\"][\"Realtime Currency Exchange Rate\"][\"6. Last Refreshed\"]} (UTC)</h3>\n            </div> : (data[\"data\"][\"Error Message\"]) ? <h2>Invalid API call</h2> : (data[\"data\"][\"Note\"]) ? <h2>API Limit Reached</h2> : <h2>Select Currencies</h2>\n    )\n}\n\nexport default Card","import './App.css';\nimport CurrencySelector from \"./component/CurrencySelector\";\nimport Card from \"./component/Card\";\nimport {useState} from \"react\";\n\nfunction App() {\n    const [data, setData] = useState({})\n    const API_KEY = process.env.REACT_APP_FINANCE_API_KEY;\n    const getApiData = (fromCurrency, toCurrency) => {\n        fetch(\n            `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${fromCurrency}&to_currency=${toCurrency}&apikey=${API_KEY}`\n        ).then(response => response.json())\n            .then(data => {\n                setData(data)\n            })\n    }\n    return (\n        <div className=\"App\">\n            <CurrencySelector getApiData ={getApiData}/>\n            <Card data={data}/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}