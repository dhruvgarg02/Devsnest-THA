{"version":3,"sources":["redux/userForm/userFormActionTypes.js","App.js","redux/userForm/userFormActions.js","redux/userForm/userFormReducer.js","redux/store.js","index.js"],"names":["updateFirstName","updateLastName","App","firstName","useSelector","state","lastName","dispatch","useDispatch","className","action","type","name","value","placeholder","onChange","e","input","target","payload","initialState","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAAaA,EAAkB,kBAClBC,EAAiB,iB,OC6CfC,MAvCf,WAEE,IAAMC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMF,aACzCG,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAGxCC,EAAWC,cACjB,OACE,sBAAKC,UAAU,MAAf,UACE,4CACA,uBAAMC,OAAO,GAAb,UACE,uBACEC,KAAK,OACLC,KAAK,YACLC,MAAOV,EACPW,YAAY,aACZC,SAAU,SAACC,GCnBe,IAACC,EDoBzBV,GCpByBU,EDoBKD,EAAEE,OAAOL,MCnB1C,CACLF,KAAMX,EACNmB,QAASF,QDoBL,uBACEN,KAAK,OACLC,KAAK,WACLC,MAAOP,EACPQ,YAAY,YACZC,SAAU,SAACC,GCrBc,IAACC,EDsBxBV,GCtBwBU,EDsBKD,EAAEE,OAAOL,MCrBzC,CACLF,KAAMV,EACNkB,QAASF,WDuBP,gCACE,sCACA,+CAAkBd,KAClB,8CAAiBG,Y,cEtCnBc,EAAe,CACnBjB,UAAW,GACXG,SAAU,ICEGe,EAFDC,aDGiB,WAAmC,IAAlCjB,EAAiC,uDAAzBe,EAAcV,EAAW,uCAC/D,OAAQA,EAAOC,MACb,KAAKX,EACH,OAAO,2BACFK,GADL,IAEEF,UAAWO,EAAOS,UAEtB,KAAKlB,EACH,OAAO,2BACFI,GADL,IAEEC,SAAUI,EAAOS,UAGrB,QACE,OAAOd,MEfbkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.5f35ab95.chunk.js","sourcesContent":["export const updateFirstName = \"updateFirstName\";\nexport const updateLastName = \"updateLastName\";\n","import \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  updateFirstNameInput,\n  updateLastNameInput,\n} from \"./redux/userForm/userFormActions\";\n\nfunction App() {\n  //useSelector can be used to access the whole Store\n  const firstName = useSelector((state) => state.firstName);\n  const lastName = useSelector((state) => state.lastName);\n\n  // to use dispatch in react redux we use useDispatch()\n  const dispatch = useDispatch();\n  return (\n    <div className=\"App\">\n      <h1>Input Data</h1>\n      <form action=\"\">\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          value={firstName}\n          placeholder=\"First Name\"\n          onChange={(e) => {\n            dispatch(updateFirstNameInput(e.target.value));\n          }}\n        />\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          value={lastName}\n          placeholder=\"Last Name\"\n          onChange={(e) => {\n            dispatch(updateLastNameInput(e.target.value));\n          }}\n        />\n      </form>\n      <div>\n        <h1>Data</h1>\n        <h3>First Name : {firstName}</h3>\n        <h3>Last Name : {lastName}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { updateFirstName, updateLastName } from \"./userFormActionTypes\";\n\n// Action Creators\n\nexport const updateFirstNameInput = (input) => {\n  return {\n    type: updateFirstName,\n    payload: input,\n  };\n};\n\nexport const updateLastNameInput = (input) => {\n  return {\n    type: updateLastName,\n    payload: input,\n  };\n};\n","import { updateFirstName, updateLastName } from \"./userFormActionTypes\";\n\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n};\n\nexport const userFormReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case updateFirstName:\n      return {\n        ...state,\n        firstName: action.payload,\n      };\n    case updateLastName:\n      return {\n        ...state,\n        lastName: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport { userFormReducer } from \"./userForm/userFormReducer\";\n\n// It takes Reducer Func. as parameter\nconst store = createStore(userFormReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}